# bump: php-version /PHP_VERSION="(.*)"/ https://www.php.net/downloads.php|re:/php-([\d.]+).tar.gz/$1/|semver:*
PHP_VERSION="8.3.7"

export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_DEV_URL="https://github.com/php/php-src.git"
export ZOPEN_DEV_BRANCH="php-${PHP_VERSION}"
export ZOPEN_DEV_DEPS="git make m4 autoconf perl libtool automake bison re2c zoslib sed diffutils coreutils libiconv"

export ZOPEN_STABLE_URL="https://www.php.net/distributions/php-${PHP_VERSION}.tar.gz"
export ZOPEN_STABLE_DEPS="curl make gzip zoslib libxml2 sqlite libiconv sed coreutils"

export ZOPEN_COMP="CLANG"

if [ "${ZOPEN_BUILD_LINE}" = "STABLE" ]; then
  export ZOPEN_BOOTSTRAP=skip
  LIBXML_CFLAGS=
  LIBXML_LIBS=
  export ZOPEN_EXTRA_CONFIGURE_OPTS='--disable-opcache --disable-phar --without-pear --without-pcre-jit'
  export ZOPEN_COMP='CLANG'

# Temporary work-around waiting for fopen_ascii function in zoslib so that configure works
# and
# Temporary work-around for lack of MAP_ANON support in zoslib mmap emulation
  export ZOPEN_EXTRA_CFLAGS="-DMAP_ANON=16 -DMAP_ANONYMOUS=16"
else
  export ZOPEN_BOOTSTRAP="./buildconf"
  export ZOPEN_CONFIGURE="./configure"
fi
export ZOPEN_CHECK_OPTS="test"

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"
  summary="$1/$2_summary.log"

  if [ -z "${NO_COLOR}" ]; then
    actualPasses=$(grep '1;32mPASS' ${chk} | awk ' { print $3; }' | wc -l)
    actualSkips=$(grep '1;33mSKIP' ${chk} | awk ' { print $3; }' | wc -l)
    actualFailures=$(grep '1;31mFAIL' ${chk} | awk ' { print $3; }' | wc -l)
  else
    actualPasses=$(grep 'PASS' ${chk} | awk ' { print $3; }' | wc -l)
    actualSkips=$(grep 'SKIP' ${chk} | awk ' { print $3; }' | wc -l)
    actualFailures=$(grep 'FAIL' ${chk} | awk ' { print $3; }' | wc -l)
  fi

  expectedFailures=112

  totalTests=$((actualPasses+actualSkips+actualFailures))
  echo "actualFailures:${actualFailures}"
  echo "expectedFailures:${expectedFailures}"
  echo "totalTests:${totalTests}"

  echo "PHP Results" >${summary}
  echo "actualFailures:${actualFailures}" >>${summary}
  echo "expectedFailures:${expectedFailures}" >>${summary}
  echo "totalTests:${totalTests}" >>${summary}
}

zopen_get_version()
{
  ./sapi/cli/php --version | head -1 | awk ' { print $2; }'
}
