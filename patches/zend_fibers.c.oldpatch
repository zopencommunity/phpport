diff --git a/Zend/zend_fibers.c b/Zend/zend_fibers.c
index e669ab6b..7b1676b7 100644
--- a/Zend/zend_fibers.c
+++ b/Zend/zend_fibers.c
@@ -237,7 +237,7 @@ static zend_fiber_stack *zend_fiber_stack_allocate(size_t size)
 	}
 # endif
 #else
-	pointer = mmap(NULL, alloc_size, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);
+	pointer = zend_mmap(NULL, alloc_size, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);
 
 	if (pointer == MAP_FAILED) {
 		zend_throw_exception_ex(NULL, 0, "Fiber stack allocate failed: mmap failed: %s (%d)", strerror(errno), errno);
@@ -249,7 +249,7 @@ static zend_fiber_stack *zend_fiber_stack_allocate(size_t size)
 # if ZEND_FIBER_GUARD_PAGES
 	if (mprotect(pointer, ZEND_FIBER_GUARD_PAGES * page_size, PROT_NONE) < 0) {
 		zend_throw_exception_ex(NULL, 0, "Fiber stack protect failed: mprotect failed: %s (%d)", strerror(errno), errno);
-		munmap(pointer, alloc_size);
+		zend_munmap(pointer, alloc_size);
 		return NULL;
 	}
 # endif
@@ -303,11 +303,11 @@ static void zend_fiber_stack_free(zend_fiber_stack *stack)
 #ifdef ZEND_WIN32
 	VirtualFree(pointer, 0, MEM_RELEASE);
 #else
-	munmap(pointer, stack->size + ZEND_FIBER_GUARD_PAGES * page_size);
+	zend_munmap(pointer, stack->size + ZEND_FIBER_GUARD_PAGES * page_size);
 #endif
 
 #if !defined(ZEND_FIBER_UCONTEXT) && BOOST_CONTEXT_SHADOW_STACK
-	munmap(stack->ss_base, stack->ss_size);
+	zend_munmap(stack->ss_base, stack->ss_size);
 #endif
 
 	efree(stack);
